import telebot
import users
from telebot.types import ReplyKeyboardMarkup, KeyboardButton
from datetime import datetime, timedelta
from telebot.types import BotCommand

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = telebot.TeleBot('8080525686:AAE0Ye8eY6pMb4OIHnsN8Pr2YsdWfdQdp4k')

# –ö–ª–∞—Å—Å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
class User:
    def __init__(self, chat_id):
        self.chat_id = chat_id
        self.language = "ru"
        self.current_appointment = None

    def set_language(self, language):
        self.language = language

    def get_language(self):
        return self.language

    def set_appointment(self, appointment):
        self.current_appointment = appointment

    def get_appointment(self):
        return self.current_appointment

    def cancel_appointment(self):
        self.current_appointment = None


# –ö–ª–∞—Å—Å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –∑–∞–ø–∏—Å–∏
class Appointment:
    def __init__(self, service, master, date, time):
        self.service = service
        self.master = master
        self.date = date
        self.time = time

    def __str__(self):
        return f"Service: {self.service}, Master: {self.master}, Date: {self.date}, Time: {self.time}"

# –ö–ª–∞—Å—Å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ–± —É—Å–ª—É–≥–µ
class Service:
    def __init__(self, name, price):
        self.name = name
        self.price = price

# –ö–ª–∞—Å—Å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –º–∞—Å—Ç–µ—Ä–µ
class Master:
    def __init__(self, name, services):
        self.name = name
        self.services = services


bot.set_my_commands([

    BotCommand("start", "–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"),
    BotCommand("settings", "–ù–∞—Å—Ç—Ä–æ–π–∫–∏"),
    BotCommand("main_menu", "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
])

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
LANGUAGES = {
    "–†—É—Å—Å–∫–∏–π": "ru",
    "English": "eng",
    "“ö–∞–∑–∞“õ —Ç—ñ–ª—ñ": "kz"
}

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_language = {}
user_data={ }
APPOINTMENTS = {}
users = {}

SERVICES = {
    "ru": "–ú–∞–Ω–∏–∫—é—Ä (–≥–µ–ª—å –ø–æ–∫—Ä—ã—Ç–∏–µ) - 7000 —Ç–µ–Ω–≥–µ \n"
          "–ú–∞–Ω–∏–∫—é—Ä (–Ω–∞—Ä–∞—â–∏–≤–∞–Ω–∏–µ) - 13000 —Ç–µ–Ω–≥–µ \n"
          "–ü–µ–¥–∏–∫—é—Ä - 9000 —Ç–µ–Ω–≥–µ \n"
          "–õ–∞–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ—Å–Ω–∏—Ü - 8000 —Ç–µ–Ω–≥–µ \n"
          "–ù–∞—Ä–∞—â–∏–≤–∞–Ω–∏–µ —Ä–µ—Å–Ω–∏—Ü - 11000 —Ç–µ–Ω–≥–µ \n"
          "–õ–∞–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –±—Ä–æ–≤–µ–π - 7000 —Ç–µ–Ω–≥–µ \n"
          "–°—Ç—Ä–∏–∂–∫–∞ - 7000 —Ç–µ–Ω–≥–µ",

    "eng": "Manicure (gel polish) - 7000 tenge \n"
           "Manicure (extensions) - 13000 tenge \n"
           "Pedicure - 9000 tenge \n"
           "Eyelash lamination - 8000 tenge \n"
           "Eyelash extensions - 11000 tenge \n"
           "Eyebrow lamination - 7000 tenge \n"
           "Haircut - 7000 tenge",

    "kz": "–ú–∞–Ω–∏–∫—é—Ä (–≥–µ–ª—å –∂–∞–±—ã–Ω—ã) - 7000 —Ç–µ“£–≥–µ \n"
          "–ú–∞–Ω–∏–∫—é—Ä (–∫–µ“£–µ–π—Ç—É) - 13000 —Ç–µ“£–≥–µ \n"
          "–ü–µ–¥–∏–∫—é—Ä - 9000 —Ç–µ“£–≥–µ \n"
          "–ö—ñ—Ä–ø—ñ–∫ –ª–∞–º–∏–Ω–∞—Ü–∏—è—Å—ã - 8000 —Ç–µ“£–≥–µ \n"
          "–ö—ñ—Ä–ø—ñ–∫ “±–∑–∞—Ä—Ç—É - 11000 —Ç–µ“£–≥–µ \n"
          "“ö–∞—Å –ª–∞–º–∏–Ω–∞—Ü–∏—è—Å—ã - 7000 —Ç–µ“£–≥–µ \n"
          "–®–∞—à “õ–∏—é - 7000 —Ç–µ“£–≥–µ"
}


MASTERS = {
    "ru": { "–ú–∞–Ω–∏–∫—é—Ä (–≥–µ–ª—å –ø–æ–∫—Ä—ã—Ç–∏–µ)": ["–ê—Ä—É–∂–∞–Ω", "–°–∞–Ω–∏—è", "–ê–π—ã–º–∂–∞–Ω"],
    "–ú–∞–Ω–∏–∫—é—Ä (–Ω–∞—Ä–∞—â–∏–≤–∞–Ω–∏–µ)": ["–ú–∞—Ä–∂–∞–Ω", "–ï—Ä–∫–µ–∂–∞–Ω" , "–ù–∞–∑–µ—Ä–∫–µ"],
    "–ü–µ–¥–∏–∫—é—Ä": ["–ê—Å—ã–ª–∂–∞–Ω", "–ú–∞–¥–∏–Ω–∞"],
    "–õ–∞–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ—Å–Ω–∏—Ü": ["–ê–ª–∏–Ω–∞", "–ê–π—à–∞", "–°–æ—Ñ–∏—è"],
    "–ù–∞—Ä–∞—â–∏–≤–∞–Ω–∏–µ —Ä–µ—Å–Ω–∏—Ü": ["–ê–ª–∏–Ω–∞", "–ü–æ–ª–∏–Ω–∞", "–ê–π—ã–º–∂–∞–Ω"],
    "–õ–∞–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –±—Ä–æ–≤–µ–π": ["–ì–∞–ª–∏–Ω–∞", "–ú–∞—Ä–∏–Ω–∞"],
    "–°—Ç—Ä–∏–∂–∫–∞": ["–í–∏—Ç–∞–ª–∏–π", "–ê–¥–µ–º–∞","–ê–Ω–Ω–∞"]
          },
    "eng": {
        "Manicure (gel polish)": ["Aruzhan", "Saniya", "Aymyzhan"],
        "Manicure (extensions)": ["Marzhan", "Erkezhan", "Nazerke"],
        "Pedicure": ["Asylzhan", "Madina"],
        "Eyelash lamination": ["Alina", "Aisha", "Sofia"],
        "Eyelash extensions": ["Alina", "Polina", "Aymyzhan"],
        "Eyebrow lamination": ["Galina", "Marina"],
        "Haircut": ["Vitaliy", "Adema", "Anna"]
    },
    "kz": {
        "–ú–∞–Ω–∏–∫—é—Ä (–≥–µ–ª—å –∂–∞–±—ã–Ω—ã)": ["–ê—Ä—É–∂–∞–Ω", "–°–∞–Ω–∏—è", "–ê–π—ã–º–∂–∞–Ω"],
        "–ú–∞–Ω–∏–∫—é—Ä (–∫–µ“£–µ–π—Ç—É)": ["–ú–∞—Ä–∂–∞–Ω", "–ï—Ä–∫–µ–∂–∞–Ω", "–ù–∞–∑–µ—Ä–∫–µ"],
        "–ü–µ–¥–∏–∫—é—Ä": ["–ê—Å—ã–ª–∂–∞–Ω", "–ú–∞–¥–∏–Ω–∞"],
        "–ö—ñ—Ä–ø—ñ–∫ –ª–∞–º–∏–Ω–∞—Ü–∏—è—Å—ã": ["–ê–ª–∏–Ω–∞", "–ê–π—à–∞", "–°–æ—Ñ–∏—è"],
        "–ö—ñ—Ä–ø—ñ–∫ “±–∑–∞—Ä—Ç—É": ["–ê–ª–∏–Ω–∞", "–ü–æ–ª–∏–Ω–∞", "–ê–π—ã–º–∂–∞–Ω"],
        "“ö–∞—Å –ª–∞–º–∏–Ω–∞—Ü–∏—è—Å—ã": ["–ì–∞–ª–∏–Ω–∞", "–ú–∞—Ä–∏–Ω–∞"],
        "–®–∞—à “õ–∏—é": ["–í–∏—Ç–∞–ª–∏–π", "–ê–¥–µ–º–∞", "–ê–Ω–Ω–∞"]
    }
}


# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=["start"])
def start(message):
    user = User(message.chat.id)
    users[message.chat.id] = user

    markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    for lang in LANGUAGES.keys():
        markup.add(KeyboardButton(lang))

    bot.send_message(
        message.chat.id,
        "–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / Choose a language / –¢—ñ–ª–¥—ñ —Ç–∞“£–¥–∞“£—ã–∑ :",
        reply_markup=markup
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞

@bot.message_handler(func=lambda message: message.text in LANGUAGES.keys())
def set_language(message):
    user = users[message.chat.id]
    user.set_language(LANGUAGES[message.text])
    lang = user.get_language()

    messages = {
        "ru": ("–û—Ç–ª–∏—á–Ω–æ! –í—ã –≤—ã–±—Ä–∞–ª–∏ –†—É—Å—Å–∫–∏–π.\n",
               "–í—ã –≥–æ—Ç–æ–≤—ã –∑–∞—Å–∏—è—Ç—å? ‚ú® –ó–∞–ø–∏—à–∏—Ç–µ—Å—å –∫ –Ω–∞–º –∏ –ø–æ—á—É–≤—Å—Ç–≤—É–π—Ç–µ —Å–µ–±—è –∫–æ—Ä–æ–ª–µ–≤–æ–π üëë"),
        "eng": ("Great! You chose English.\n",
                "Are you ready to shine? ‚ú® Book an appointment and feel like a queen üëë"),
        "kz": (
        "–ñ–∞“õ—Å—ã! –°—ñ–∑ “õ–∞–∑–∞“õ —Ç—ñ–ª—ñ–Ω —Ç–∞“£–¥–∞–¥—ã“£—ã–∑.\n",
        "–ñ–∞—Ä“õ—ã—Ä–∞—É“ì–∞ –¥–∞–π—ã–Ω—Å—ã–∑ –±–∞? ‚ú® –ë—ñ–∑–≥–µ –∂–∞–∑—ã–ª—ã“£—ã–∑ –∂”ô–Ω–µ —Ö–∞–Ω—à–∞–π—ã–º–¥–∞–π —Å–µ–∑—ñ–Ω—ñ“£—ñ–∑ üëë")
    }

    bot.send_message(message.chat.id, messages[lang][0])
    bot.send_message(message.chat.id, messages[lang][1])
    show_main_menu(message.chat.id, lang)

# –ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def show_main_menu(chat_id, lang):
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = {
        "ru": ["–ü—Ä–æ—Å–º–æ—Ç—Ä —É—Å–ª—É–≥",
               "–ó–∞–ø–∏—Å—å –Ω–∞ —É—Å–ª—É–≥—É",
               "–û—Ç–º–µ–Ω–∞ –∑–∞–ø–∏—Å–∏",
               "–ú–æ–∏ –∑–∞–ø–∏—Å–∏"
               ],
        "eng": ["View services",
                "Book an appointment",
                "Cancel booking",
                "My bookings"
                ],
        "kz": ["“ö—ã–∑–º–µ—Ç—Ç–µ—Ä–¥—ñ “õ–∞—Ä–∞—É",
               "“ö—ã–∑–º–µ—Ç–∫–µ –∂–∞–∑—ã–ª—É",
               "–ñ–∞–∑—ã–ª—ã–º–¥—ã –±–æ–ª–¥—ã—Ä–º–∞—É",
               "–ú–µ–Ω—ñ“£ –∂–∞–∑—ã–ª—ã–º–¥–∞—Ä—ã–º"
               ]
    }

    for btn_text in buttons[lang]:
        markup.add(KeyboardButton(btn_text))

    messages = {
        "ru": "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        "eng": "Choose an action:",
        "kz": "”ò—Ä–µ–∫–µ—Ç—Ç—ñ —Ç–∞“£–¥–∞“£—ã–∑:"
    }

    bot.send_message(chat_id, messages[lang], reply_markup=markup)



# –ü–æ–∫–∞–∑–∞—Ç—å —É—Å–ª—É–≥–∏
@bot.message_handler(func=lambda message: message.text in ["–ü—Ä–æ—Å–º–æ—Ç—Ä —É—Å–ª—É–≥",
                                                           "View services",
                                                           "“ö—ã–∑–º–µ—Ç—Ç–µ—Ä–¥—ñ “õ–∞—Ä–∞—É"])
def show_services(message):
    user = users[message.chat.id]
    lang = user.get_language()
    bot.send_message(message.chat.id, SERVICES[lang])

# –ó–∞–ø—Ä–æ—Å –Ω–∞ –∑–∞–ø–∏—Å—å
@bot.message_handler(
    func=lambda message: message.text in ["–ó–∞–ø–∏—Å—å –Ω–∞ —É—Å–ª—É–≥—É",
                                          "Book an appointment",
                                          "“ö—ã–∑–º–µ—Ç–∫–µ –∂–∞–∑—ã–ª—É"])
def request_appointment(message):
    user = users[message.chat.id]
    lang = user.get_language()
    messages = {
        "ru": "–í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É:",
        "eng": "Select a service:",
        "kz": "“ö—ã–∑–º–µ—Ç—Ç—ñ —Ç–∞“£–¥–∞“£—ã–∑:"
    }
    services = {
        "ru": [
            "–ú–∞–Ω–∏–∫—é—Ä (–≥–µ–ª—å –ø–æ–∫—Ä—ã—Ç–∏–µ)", "–ú–∞–Ω–∏–∫—é—Ä (–Ω–∞—Ä–∞—â–∏–≤–∞–Ω–∏–µ)", "–ü–µ–¥–∏–∫—é—Ä",
            "–°—Ç—Ä–∏–∂–∫–∞", "–õ–∞–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ—Å–Ω–∏—Ü", "–ù–∞—Ä–∞—â–∏–≤–∞–Ω–∏–µ —Ä–µ—Å–Ω–∏—Ü", "–õ–∞–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –±—Ä–æ–≤–µ–π"
        ],
        "eng": [
            "Manicure (gel coating)", "Manicure (extensions)", "Pedicure",
            "Haircut", "Eyelash lamination", "Eyelash extensions", "Eyebrow lamination"
        ],
        "kz": [
            "–ú–∞–Ω–∏–∫—é—Ä (–≥–µ–ª—å –∂–∞–±—ã–Ω—ã)", "–ú–∞–Ω–∏–∫—é—Ä (–∫–µ“£–µ–π—Ç—É)", "–ü–µ–¥–∏–∫—é—Ä",
            "–®–∞—à “õ–∏—é", "–ö—ñ—Ä–ø—ñ–∫ –ª–∞–º–∏–Ω–∞—Ü–∏—è—Å—ã", "–ö—ñ—Ä–ø—ñ–∫ “±–∑–∞—Ä—Ç—É", "“ö–∞—Å –ª–∞–º–∏–Ω–∞—Ü–∏—è—Å—ã"
        ]
    }

    markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True, row_width=2)
    buttons = [KeyboardButton(service) for service in services[lang]]
    markup.add(*buttons)
    bot.send_message(message.chat.id, messages[lang], reply_markup = markup)
    bot.register_next_step_handler(message,process_service_selection)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —É—Å–ª—É–≥–∏
@bot.message_handler(
    func=lambda message: message.text in [item for sublist in SERVICES.values() if isinstance(sublist, list) for item in
                                          sublist])
def process_service_selection(message):
    user = users[message.chat.id]
    lang = user.get_language()
    selected_service = message.text.strip()

    response_messages = {
        "ru": f"–í—ã –≤—ã–±—Ä–∞–ª–∏: {selected_service}. –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –º–∞—Å—Ç–µ—Ä–∞.",
        "eng": f"You selected: {selected_service}. Now choose a master.",
        "kz": f"–°—ñ–∑ —Ç–∞“£–¥–∞–¥—ã“£—ã–∑: {selected_service}. –ï–Ω–¥—ñ —à–µ–±–µ—Ä–¥—ñ —Ç–∞“£–¥–∞“£—ã–∑."
    }

    bot.send_message(message.chat.id, response_messages[lang])
    choose_master(message, selected_service)

# –í—ã–±–æ—Ä –º–∞—Å—Ç–µ—Ä–∞
def choose_master(message, service):
    user = users[message.chat.id]
    lang = user.get_language()

    normalized_services={s.lower().strip():s for s in MASTERS[lang]}
    service_key = normalized_services.get(service.lower().strip())

    if service_key:
        masters = MASTERS[lang][service_key]

        markup = ReplyKeyboardMarkup(resize_keyboard=True)
        for master in masters:
            markup.add(KeyboardButton(master))

        bot.send_message(user.chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Å—Ç–µ—Ä–∞:" if lang == "ru" else
                                   "Choose a master:" if lang == "eng" else
                                   "–ú–∞–º–∞–Ω —Ç–∞“£–¥–∞“£—ã–∑:", reply_markup=markup)

        bot.register_next_step_handler(message, choose_date, service_key)

    else:
        bot.send_message(user.chat_id, "–£—Å–ª—É–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É –∏–∑ —Å–ø–∏—Å–∫–∞."
        if lang == "ru"
        else
        "Service not found. Please choose from the list."
        if lang == "eng"
        else
        "“ö—ã–∑–º–µ—Ç —Ç–∞–±—ã–ª–º–∞–¥—ã. –¢—ñ–∑—ñ–º–Ω–µ–Ω —Ç–∞“£–¥–∞“£—ã–∑.")
        show_services(message)

# –í—ã–±–æ—Ä –¥–∞—Ç—ã
def choose_date(message, service):
    user = users[message.chat.id]
    lang = user.get_language()
    master = message.text

    user_data = {"service": service, "master": master}
    user.set_appointment(user_data)

    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    dates = [datetime.now() + timedelta(days=i) for i in range(1, 8)]


    messages = {
        "ru": "–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É:",
        "eng": "Choose a date:",
        "kz": "–ö“Ø–Ω–¥—ñ —Ç–∞“£–¥–∞“£—ã–∑:"
    }
    for date in dates:
        markup.add(KeyboardButton(date.strftime("%Y-%m-%d")))

    bot.send_message(user.chat_id, messages[lang], reply_markup=markup)
    bot.register_next_step_handler(message, choose_time)

# –í—ã–±–æ—Ä –≤—Ä–µ–º–µ–Ω–∏
def choose_time(message):
    user = users[message.chat.id]
    lang = user.get_language()
    date = message.text

    user_data = user.get_appointment()
    user_data["date"] = date
    user.set_appointment(user_data)

    messages = {
        "ru": "–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è:",
        "eng": "Choose a time:",
        "kz": "–£–∞“õ—ã—Ç—Ç—ã —Ç–∞“£–¥–∞“£—ã–∑:"
    }

    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    times = ["10:00", "12:00", "14:00", "16:00", "18:00"]
    for time in times:
        markup.add(KeyboardButton(time))

    bot.send_message(user.chat_id, messages[lang], reply_markup=markup)
    bot.register_next_step_handler(message, confirm_booking)

# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏
def confirm_booking(message):
    user = users[message.chat.id]
    lang = user.get_language()
    time = message.text

    user_data = user.get_appointment()
    user_data["time"] = time

    service = user_data["service"]
    master = user_data["master"]
    date = user_data["date"]


    confirmation_message = {
        "ru": f"–í—ã –∑–∞–ø–∏—Å–∞–Ω—ã –Ω–∞ {service} –∫ –º–∞—Å—Ç–µ—Ä—É {master} –Ω–∞ {date} –≤ {time}. –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∑–∞–ø–∏—Å—å:",
        "eng": f"You are booked for {service} with {master} on {date} at {time}. Confirm booking:",
        "kz": f"–°—ñ–∑ {service} “õ—ã–∑–º–µ—Ç—ñ–Ω–µ {master} –º–∞–º–∞–Ω—ã–Ω–∞ {date} –∫“Ø–Ω—ñ {time} —É–∞“õ—ã—Ç—ã–Ω–∞ –∂–∞–∑—ã–ª–¥—ã“£—ã–∑. –ñ–∞–∑—ã–ª—É–¥—ã —Ä–∞—Å—Ç–∞“£—ã–∑:"
    }

    markup = ReplyKeyboardMarkup(resize_keyboard=True)

    confirm = {
        "ru": ["–î–∞","–ù–µ—Ç"],
        "eng": ["Yes","No"],
        "kz": ["–ò”ò", "–ñ–æ“õ"]
    }

    markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add(KeyboardButton(confirm[lang][0]), KeyboardButton(confirm[lang][1]))

    bot.send_message(user.chat_id, confirmation_message[lang], reply_markup=markup)
    bot.register_next_step_handler(message, finalize_booking)

# –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏
def finalize_booking(message):
    user = users[message.chat.id]
    lang = user.get_language()
    response = message.text


    responses = {
        "ru": {
            "confirm": "‚úÖ –í–∞—à–∞ –∑–∞–ø–∏—Å—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞!\nüìç –ñ–¥–µ–º –≤–∞—Å –ø–æ –∞–¥—Ä–µ—Å—É: –≥. –ê—Å—Ç–∞–Ω–∞, —É–ª. –ú–∞–Ω–≥–∏–ª–∏–∫ –ï–ª 1/2.\nüéâ –î–æ —Å–∫–æ—Ä–æ–π –≤—Å—Ç—Ä–µ—á–∏!",
            "cancel": "–í–∞—à–∞ –∑–∞–ø–∏—Å—å –æ—Ç–º–µ–Ω–µ–Ω–∞.–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!"
        },
        "eng": {
            "confirm": "‚úÖ Your booking is confirmed!\nüìç We are waiting for you at: Astana, Mangilik El 1/2.\nüéâ See you soon!",
            "cancel": "Your booking has been canceled. Good bye!"
        },
        "kz": {
            "confirm": "‚úÖ –°—ñ–∑–¥—ñ“£ –∂–∞–∑—ã–ª—É—ã“£—ã–∑ —Ä–∞—Å—Ç–∞–ª–¥—ã!\nüìç –ë—ñ–∑ —Å—ñ–∑–¥—ñ –º—ã–Ω–∞ –º–µ–∫–µ–Ω–∂–∞–π–¥–∞ –∫“Ø—Ç–µ–º—ñ–∑: –ê—Å—Ç–∞–Ω–∞ “õ., –ú”ô“£–≥—ñ–ª—ñ–∫ –ï–ª 1/2.\nüéâ –ñ–∞“õ—ã–Ω–¥–∞ –∫–µ–∑–¥–µ—Å–µ–º—ñ–∑!",
            "cancel": "–°—ñ–∑–¥—ñ“£ –∂–∞–∑—ã–ª—ã–º—ã“£—ã–∑ –∂–æ–π—ã–ª–¥—ã.–°–∞—É –±–æ–ª—ã“£—ã–∑!"
        }
    }

    if response == "–î–∞" or response == "Yes" or response == "–ò”ò":
        appointment = Appointment(
            user.get_appointment()["service"],
            user.get_appointment()["master"],
            user.get_appointment()["date"],
            user.get_appointment()["time"]
        )
        user.set_appointment(appointment)
        bot.send_message(user.chat_id, responses[lang]["confirm"])
    else:
        bot.send_message(user.chat_id, responses[lang]["cancel"])

    show_main_menu(user.chat_id, lang)

# –û—Ç–º–µ–Ω–∞ –∑–∞–ø–∏—Å–∏
@bot.message_handler(func=lambda message: message.text in ["–û—Ç–º–µ–Ω–∞ –∑–∞–ø–∏—Å–∏",
                                                           "Cancel booking",
                                                           "–ñ–∞–∑—ã–ª—ã–º–¥—ã –±–æ–ª–¥—ã—Ä–º–∞—É"])
def cancel_booking(message):
    user = users[message.chat.id]
    lang = user.get_language()

    responses = {
        "ru": "–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π.",
        "eng": "You have no active bookings.",
        "kz": "–°—ñ–∑–¥–µ –±–µ–ª—Å–µ–Ω–¥—ñ –∂–∞–∑—ã–ª—ã–º–¥–∞—Ä –∂–æ“õ."
    }

    if user.get_appointment():
        appointment = user.get_appointment()
        user.cancel_appointment()
        cancel_messages = {
            "ru": f"–í–∞—à–∞ –∑–∞–ø–∏—Å—å {appointment.service} —É {appointment.master} –≤ {appointment.date} {appointment.time} –æ—Ç–º–µ–Ω–µ–Ω–∞.",
            "eng": f"Your booking for {appointment.service} with {appointment.master} on {appointment.date} at {appointment.time} has been canceled.",
            "kz": f"–°—ñ–∑–¥—ñ“£ {appointment.service} “õ—ã–∑–º–µ—Ç—ñ–Ω–µ {appointment.master} –º–∞–º–∞–Ω—ã–Ω–∞ {appointment.date} –∫“Ø–Ω—ñ {appointment.time} —É–∞“õ—ã—Ç—ã–Ω–∞ –∂–∞–∑—ã–ª—É—ã“£—ã–∑ –∂–æ–π—ã–ª–¥—ã."
        }
        bot.send_message(user.chat_id, cancel_messages[lang])
    else:
        bot.send_message(user.chat_id, responses[lang])

        show_main_menu(user.chat_id, lang)

bot.set_my_commands([
    BotCommand("start", "–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"),
    BotCommand("settings", "–ù–∞—Å—Ç—Ä–æ–π–∫–∏"),
    BotCommand("main_menu", "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
])

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
@bot.message_handler(commands=["settings"])
def settings(message):
    user = users[message.chat.id]
    lang = user.get_language()

    messages = {
        "ru": "–ù–∞—Å—Ç—Ä–æ–π–∫–∏:\n1. –°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫",
        "eng": "Settings:\n1. Change language",
        "kz": "–ë–∞–ø—Ç–∞—É–ª–∞—Ä:\n1. –¢—ñ–ª–¥—ñ ”©–∑–≥–µ—Ä—Ç—É"
    }

    markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add(KeyboardButton("–°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫") if lang == "ru" else
               KeyboardButton("Change language") if lang == "eng" else
               KeyboardButton("–¢—ñ–ª–¥—ñ ”©–∑–≥–µ—Ä—Ç—É"))

    bot.send_message(user.chat_id, messages[lang], reply_markup=markup)
    bot.register_next_step_handler(message, change_language)


@bot.message_handler(commands=["main_menu"])
def return_to_main_menu(message):
    user_id = message.chat.id
    lang = user_language.get(user_id, "ru")
    show_main_menu(user_id, lang)

# –°–º–µ–Ω–∞ —è–∑—ã–∫–∞
def change_language(message):
    markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    for lang in LANGUAGES.keys():
        markup.add(KeyboardButton(lang))

    bot.send_message(
        message.chat.id,
        "–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / Choose a language / –¢—ñ–ª–¥—ñ —Ç–∞“£–¥–∞“£—ã–∑:",
        reply_markup=markup
    )
    bot.register_next_step_handler(message, set_language)

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —è–∑—ã–∫–∞
def set_language(message):
    user = users[message.chat.id]
    user.set_language(LANGUAGES[message.text])
    lang = user.get_language()

    messages = {
        "ru": "–Ø–∑—ã–∫ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ –†—É—Å—Å–∫–∏–π",
        "eng": "Language changed to English",
        "kz": "–¢—ñ–ª “ö–∞–∑–∞“õ —Ç—ñ–ª—ñ–Ω–µ ”©–∑–≥–µ—Ä—Ç—ñ–ª–¥—ñ"
    }

    bot.send_message(user.chat_id, messages[lang])

# –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
@bot.message_handler(commands=["main_menu"])
def return_to_main_menu(message):
    user = users[message.chat.id]
    lang = user.get_language()
    show_main_menu(user.chat_id, lang)


@bot.message_handler(func=lambda message: message.text in ["–ú–æ–∏ –∑–∞–ø–∏—Å–∏", "My bookings", "–ú–µ–Ω—ñ“£ –∂–∞–∑—ã–ª—ã–º–¥–∞—Ä—ã–º"])
def show_my_bookings(message):
    user = users[message.chat.id]  # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    lang = user.get_language()  # –ü–æ–ª—É—á–∞–µ–º —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –∑–∞–ø–∏—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    appointment = user.get_appointment()

    if appointment:
        # –ï—Å–ª–∏ –∑–∞–ø–∏—Å—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        booking_message = {
            "ru": f"üìå –í–∞—à–∞ —Ç–µ–∫—É—â–∞—è –∑–∞–ø–∏—Å—å:\n"
                  f"üõ† –£—Å–ª—É–≥–∞: {appointment.service}\n"
                  f"üë§ –ú–∞—Å—Ç–µ—Ä: {appointment.master}\n"
                  f"üìÖ –î–∞—Ç–∞: {appointment.date}\n"
                  f"‚è∞ –í—Ä–µ–º—è: {appointment.time}",
            "eng": f"üìå Your current booking:\n"
                   f"üõ† Service: {appointment.service}\n"
                   f"üë§ Master: {appointment.master}\n"
                   f"üìÖ Date: {appointment.date}\n"
                   f"‚è∞ Time: {appointment.time}",
            "kz": f"üìå –°—ñ–∑–¥—ñ“£ –∂–∞–∑—ã–ª—É—ã“£—ã–∑:\n"
                  f"üõ† “ö—ã–∑–º–µ—Ç: {appointment.service}\n"
                  f"üë§ –ú–∞–º–∞–Ω: {appointment.master}\n"
                  f"üìÖ –ö“Ø–Ω—ñ: {appointment.date}\n"
                  f"‚è∞ –£–∞“õ—ã—Ç—ã: {appointment.time}"
        }
        bot.send_message(user.chat_id, booking_message[lang])
    else:
        # –ï—Å–ª–∏ –∑–∞–ø–∏—Å–∏ –Ω–µ—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –∑–∞–ø–∏—Å–µ–π
        no_booking_message = {
            "ru": "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π.",
            "eng": "‚ùå You have no active bookings.",
            "kz": "‚ùå –°—ñ–∑–¥–µ –±–µ–ª—Å–µ–Ω–¥—ñ –∂–∞–∑—ã–ª—ã–º–¥–∞—Ä –∂–æ“õ."
        }
        bot.send_message(user.chat_id, no_booking_message[lang])

bot.polling(none_stop=True)